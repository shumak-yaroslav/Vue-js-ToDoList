{"remainingRequest":"/home/yanieniz/itech-soft/node_modules/babel-loader/lib/index.js!/home/yanieniz/itech-soft/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yanieniz/itech-soft/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yanieniz/itech-soft/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yanieniz/itech-soft/src/views/Task.vue","mtime":1599808143937},{"path":"/home/yanieniz/itech-soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICB0YXNrOiBmdW5jdGlvbiB0YXNrKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy50YXNrQnlJZCgrdGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgIGNoaXBzOiBudWxsLAogICAgICBkYXRlOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLnRhc2suZGVzY3JpcHRpb247CiAgICB0aGlzLmNoaXBzID0gTS5DaGlwcy5pbml0KHRoaXMuJHJlZnMuY2hpcHMsIHsKICAgICAgcGxhY2Vob2xkZXI6ICdUYXNrIHRhZ3MnLAogICAgICBkYXRhOiB0aGlzLnRhc2sudGFncwogICAgfSksIHRoaXMuZGF0ZSA9IE0uRGF0ZXBpY2tlci5pbml0KHRoaXMuJHJlZnMuZGF0ZXBpY2tlciwgewogICAgICBmb3JtYXQ6ICdkZC5tbS55eXl5JywKICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKHRoaXMudGFzay5kYXRlKSwKICAgICAgc2V0RGVmYXVsdERhdGU6IHRydWUKICAgIH0pLCBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCk7CiAgICB9LCAwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdEhhbmRsZXI6IGZ1bmN0aW9uIHN1Ym1pdEhhbmRsZXIoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1cGRhdGVUYXNrJywgewogICAgICAgIGlkOiB0aGlzLnRhc2suaWQsCiAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgZGF0ZTogdGhpcy5kYXRlLmRhdGUKICAgICAgfSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbGlzdCcpOwogICAgfSwKICAgIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgICBpZiAodGhpcy5kYXRlICYmIHRoaXMuZGF0ZS5kZXN0cm95KSB7CiAgICAgICAgdGhpcy5kYXRlLmRlc3Ryb3koKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY2hpcHMgJiYgdGhpcy5jaGlwcy5kZXN0cm95KSB7CiAgICAgICAgdGhpcy5jaGlwcy5kZXN0cm95KCk7CiAgICAgIH0KICAgIH0sCiAgICBjb21wbGV0ZVRhc2s6IGZ1bmN0aW9uIGNvbXBsZXRlVGFzaygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NvbXBsZXRlVGFzaycsIHRoaXMudGFzay5pZCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbGlzdCcpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AACA;AAHA,GADA;AAMA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA,GANA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,WAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,SAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,MAAA,WAAA,EAAA,WADA;AAEA,MAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAFA,KAAA,CAAA,EAIA,KAAA,IAAA,GAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,UAAA,EAAA;AACA,MAAA,MAAA,EAAA,YADA;AAEA,MAAA,WAAA,EAAA,IAAA,IAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAFA;AAGA,MAAA,cAAA,EAAA;AAHA,KAAA,CAJA,EASA,UAAA,CAAA,YAAA;AACA,MAAA,CAAA,CAAA,gBAAA;AACA,KAFA,EAEA,CAFA,CATA;AAYA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,EAAA,EAAA,KAAA,IAAA,CAAA,EADA;AAEA,QAAA,WAAA,EAAA,KAAA,WAFA;AAGA,QAAA,IAAA,EAAA,KAAA,IAAA,CAAA;AAHA,OAAA;AAKA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KARA;AASA,IAAA,SATA,uBASA;AACA,UAAA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,OAAA,EAAA;AACA,aAAA,IAAA,CAAA,OAAA;AACA;;AAEA,UAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA;AACA;AACA,KAjBA;AAkBA,IAAA,YAlBA,0BAkBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AArBA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div v-if=\"task\" class=\"col s6 offset-s3\">\n      <h1>{{ task.title }}</h1>\n\n      <form @submit.prevent=\"submitHandler\">\n\n        <div class=\"chips\" ref=\"chips\"></div>\n\n        <div class=\"input-field\">\n            <textarea style=\"min-height: 150px\" v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n            <label for=\"description\">Description</label>\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n          </div>\n\n          <input type=\"text\" ref=\"datepicker\">\n\n          <div v-if=\"task.status\">\n            <button class=\"btn\" type=\"submit\" style=\"margin-right: 1rem\">Update</button>\n            <button class=\"btn blue\" type=\"button\" @click=\"completeTask\">Complete task</button>\n          </div>\n      </form>\n\n    </div>\n    <p v-else>Task not found</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    task() {\n      return this.$store.getters.taskById(+this.$route.params.id)\n    }\n  },\n  data: () => ({\n    description: '',\n    chips: null,\n    date: null,\n  }),\n  mounted() {\n    this.description = this.task.description\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags',\n      data: this.task.tags\n    }),\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date (this.task.date),\n      setDefaultDate: true,\n    }),\n    setTimeout(() => {\n      M.updateTextFields()\n    }, 0)\n  },\n  methods: {\n    submitHandler() {\n      this.$store.dispatch('updateTask', {\n        id: this.task.id,\n        description: this.description,\n        date: this.date.date\n      })\n      this.$router.push('/list')\n    },\n    destroyed() {\n      if (this.date && this.date.destroy) {\n        this.date.destroy()\n      }\n\n      if (this.chips && this.chips.destroy) {\n        this.chips.destroy()\n      }\n    },\n    completeTask() {\n      this.$store.dispatch('completeTask', this.task.id)\n      this.$router.push('/list')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/views"}]}