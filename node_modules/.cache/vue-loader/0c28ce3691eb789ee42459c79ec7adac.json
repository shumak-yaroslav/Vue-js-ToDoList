{"remainingRequest":"/home/yanieniz/itech-soft/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yanieniz/itech-soft/src/views/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yanieniz/itech-soft/src/views/Task.vue","mtime":1599808143937},{"path":"/home/yanieniz/itech-soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yanieniz/itech-soft/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wdXRlZDogewogICAgdGFzaygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMudGFza0J5SWQoK3RoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICAgIH0KICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBkZXNjcmlwdGlvbjogJycsCiAgICBjaGlwczogbnVsbCwKICAgIGRhdGU6IG51bGwsCiAgfSksCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLnRhc2suZGVzY3JpcHRpb24KICAgIHRoaXMuY2hpcHMgPSBNLkNoaXBzLmluaXQodGhpcy4kcmVmcy5jaGlwcywgewogICAgICBwbGFjZWhvbGRlcjogJ1Rhc2sgdGFncycsCiAgICAgIGRhdGE6IHRoaXMudGFzay50YWdzCiAgICB9KSwKICAgIHRoaXMuZGF0ZSA9IE0uRGF0ZXBpY2tlci5pbml0KHRoaXMuJHJlZnMuZGF0ZXBpY2tlciwgewogICAgICBmb3JtYXQ6ICdkZC5tbS55eXl5JywKICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlICh0aGlzLnRhc2suZGF0ZSksCiAgICAgIHNldERlZmF1bHREYXRlOiB0cnVlLAogICAgfSksCiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCkKICAgIH0sIDApCiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXRIYW5kbGVyKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlVGFzaycsIHsKICAgICAgICBpZDogdGhpcy50YXNrLmlkLAogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLAogICAgICAgIGRhdGU6IHRoaXMuZGF0ZS5kYXRlCiAgICAgIH0pCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbGlzdCcpCiAgICB9LAogICAgZGVzdHJveWVkKCkgewogICAgICBpZiAodGhpcy5kYXRlICYmIHRoaXMuZGF0ZS5kZXN0cm95KSB7CiAgICAgICAgdGhpcy5kYXRlLmRlc3Ryb3koKQogICAgICB9CgogICAgICBpZiAodGhpcy5jaGlwcyAmJiB0aGlzLmNoaXBzLmRlc3Ryb3kpIHsKICAgICAgICB0aGlzLmNoaXBzLmRlc3Ryb3koKQogICAgICB9CiAgICB9LAogICAgY29tcGxldGVUYXNrKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY29tcGxldGVUYXNrJywgdGhpcy50YXNrLmlkKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xpc3QnKQogICAgfQogIH0KfQo="},{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Task.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"row\">\n    <div v-if=\"task\" class=\"col s6 offset-s3\">\n      <h1>{{ task.title }}</h1>\n\n      <form @submit.prevent=\"submitHandler\">\n\n        <div class=\"chips\" ref=\"chips\"></div>\n\n        <div class=\"input-field\">\n            <textarea style=\"min-height: 150px\" v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\n            <label for=\"description\">Description</label>\n            <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\n          </div>\n\n          <input type=\"text\" ref=\"datepicker\">\n\n          <div v-if=\"task.status\">\n            <button class=\"btn\" type=\"submit\" style=\"margin-right: 1rem\">Update</button>\n            <button class=\"btn blue\" type=\"button\" @click=\"completeTask\">Complete task</button>\n          </div>\n      </form>\n\n    </div>\n    <p v-else>Task not found</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    task() {\n      return this.$store.getters.taskById(+this.$route.params.id)\n    }\n  },\n  data: () => ({\n    description: '',\n    chips: null,\n    date: null,\n  }),\n  mounted() {\n    this.description = this.task.description\n    this.chips = M.Chips.init(this.$refs.chips, {\n      placeholder: 'Task tags',\n      data: this.task.tags\n    }),\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\n      format: 'dd.mm.yyyy',\n      defaultDate: new Date (this.task.date),\n      setDefaultDate: true,\n    }),\n    setTimeout(() => {\n      M.updateTextFields()\n    }, 0)\n  },\n  methods: {\n    submitHandler() {\n      this.$store.dispatch('updateTask', {\n        id: this.task.id,\n        description: this.description,\n        date: this.date.date\n      })\n      this.$router.push('/list')\n    },\n    destroyed() {\n      if (this.date && this.date.destroy) {\n        this.date.destroy()\n      }\n\n      if (this.chips && this.chips.destroy) {\n        this.chips.destroy()\n      }\n    },\n    completeTask() {\n      this.$store.dispatch('completeTask', this.task.id)\n      this.$router.push('/list')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}